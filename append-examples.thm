#include "template.thm".

Define appendable : cert -> i -> i -> i -> prop by
	appendable Cert L1 L2 L3 :=
		append Append /\ prove Cert (Append (L1 ++ L2 ++ L3 ++ argv)).

Define eigen_unify : cert -> prop by
	eigen_unify Cert :=
		append Append /\ 
		prove Cert (all a\ all b\ all c\ (imp
			(Append (a ++ b ++ c ++ argv))
			(some d\ some e\ some f\ Append (d ++ e ++ f ++ argv)))).

Define append_total : (i -> bool) -> cert -> prop by
	append_total Append Cert :=
		append Append /\ is_list IsList /\ is_total Cert Append IsList.

Define append_assoc : (i -> bool) -> cert -> prop by
	append_assoc Append Cert :=
		append Append /\ is_associative Cert Append.

Define append_det : (i -> bool) -> cert -> prop by
	append_det Append Cert :=
		append Append /\ is_deterministic Cert Append.
