#include "plus.thm".

Define member2 : imap -> list imap -> prop by
	member2 X (X :: L) ;
	member2 X (Y :: L) := member X L.

% Evaluate risk of unbounded backtracking
Define copy_i : list imap -> i -> i -> prop by
	copy_i Theta argv argv ;
	copy_i Theta (X ++ Y) (U ++ V) := copy_i Theta X U /\ copy_i Theta Y V ;
	copy_i Theta zero zero ;
	copy_i Theta (succ X) (succ U) := copy_i Theta X U ;
	copy_i Theta X U := member (imap X U) Theta.