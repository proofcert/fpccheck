#include "append.thm".

Define reverse : (i -> bool) -> prop by
	reverse (mu Pred\Args\
		(some L1\ some L2\ (and (eq Args (L1 ++ L2 ++ argv))
		(or
			(and
				(eq L1 null)
				(eq L2 null))
			(some H\ some L1'\ (and
				(eq L1 (cons H L1'))
				(some L3\ and
					(Pred (L1' ++ L3 ++ argv))
					(Append (L3 ++ (cons H null) ++ L2 ++ argv)))))))))
	:=
	append Append.
