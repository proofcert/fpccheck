#include "../kernel/logic.thm".
#include "../kernel/cert-sig.thm".
#include "../fpc/simple-fpc.thm".
#include "append-examples-sig.thm".
#include "../kernel/kernel.thm".
#include "append-examples.thm".

#assert appendable (apply (ss zz) zz (ss zz) zz (ss zz)) null null null.
#assert appendable (pair# (apply (ss zz) zz (ss zz) zz (ss zz)) (apply# (ss zz) zz (ss zz) zz (ss zz) Idx)) null null null.

#assert appendable (apply (ss zz) zz (ss (ss zz)) zz (ss (ss zz))) (cons a null) null (cons a null).
#assert appendable (pair# (apply (ss zz) zz (ss (ss zz)) zz (ss (ss zz))) (apply# (ss zz) zz (ss (ss zz)) zz (ss (ss zz)) Idx)) (cons a null) null (cons a null).

#assert appendable (apply (ss zz) zz (ss zz) zz (ss zz)) null (cons a null) (cons a null).
#assert appendable (pair# (apply (ss zz) zz (ss zz) zz (ss zz)) (apply# (ss zz) zz (ss zz) zz (ss zz) Idx)) null (cons a null) (cons a null).

#assert appendable (apply (ss zz) zz (ss (ss zz)) zz (ss (ss zz)))
	(cons a null) (cons b null) (cons a (cons b null)).
#assert appendable (pair# (apply (ss zz) zz (ss (ss zz)) zz (ss (ss zz))) (apply# (ss zz) zz (ss (ss zz)) zz (ss (ss zz)) Idx))
	(cons a null) (cons b null) (cons a (cons b null)).

#assert eigen_unify (apply (ss zz) zz zz zz zz).
#assert eigen_unify (pair# (apply (ss zz) zz zz zz zz) (apply# (ss zz) zz zz zz zz Idx)).

#assert append_total _ (induction (ss zz) zz (ss zz) zz (ss zz)).
#assert append_total _ (pair# (induction (ss zz) zz (ss zz) zz (ss zz)) (induction# (ss zz) zz (ss zz) zz (ss zz) Idx)).

#assert append_det _ (induction (ss zz) (ss zz) zz (ss zz) zz).
#assert append_det _ (pair# (induction (ss zz) (ss zz) zz (ss zz) zz) (induction# (ss zz) (ss zz) zz (ss zz) zz Idx)).

#assert append_assoc _ (induction (ss zz) (ss zz) (ss zz) (ss zz) (ss zz)).
#assert append_assoc _ (pair# (induction (ss zz) (ss zz) (ss zz) (ss zz) (ss zz)) (induction# (ss zz) (ss zz) (ss zz) (ss zz) (ss zz) Idx)).
