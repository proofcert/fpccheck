#include "../kernel/logic.thm".
#include "../kernel/cert-sig.thm".
#include "../fpc/simple-fpc.thm".
#include "times-examples-sig.thm".
#include "../kernel/kernel.thm".
#include "times-examples.thm".

#assert times_zero (induction (ss (ss zz)) zz (ss (ss zz)) zz (ss (ss zz))).
#assert times_zero (pair# (induction (ss (ss zz)) zz (ss (ss zz)) zz (ss (ss zz))) (induction# (ss (ss zz)) zz (ss (ss zz)) zz (ss (ss zz)) Idx)).

#assert times_total' (induction (ss (ss zz)) zz (ss zz) zz (ss zz)).
#assert times_total' (pair# (induction (ss (ss zz)) zz (ss zz) zz (ss zz)) (induction# (ss (ss zz)) zz (ss zz) zz (ss zz) Idx)).

#assert times_det (induction (ss (ss zz)) (ss zz) zz (ss zz) zz).
#assert times_det (pair# (induction (ss (ss zz)) (ss zz) zz (ss zz) zz) (induction# (ss (ss zz)) (ss zz) zz (ss zz) zz Idx)).

#assert times_comm
	(induction?
	(case? zz
		(apply?     zz  zz (idx          z   )
		search)
		(apply? (ss zz) zz (idx       (s z)  )
		(apply?     zz  zz idxlocal
		(apply?     zz  zz (idx    (s (s z)) )
		(apply?     zz  zz (idx (s (s (s z))))
		search)))))).

% Slow!!
%#assert times_comm (induction (ss (ss (ss (ss zz)))) (ss zz) zz (ss zz) zz).
