#include "list.thm".

% Some elements to build concrete lists
Type   a, b, c, d, e, f   i.

Define append : (i -> bool) -> prop by
	append (mu A\Args\
		(some L1\ some L2\ some L3\ (and (eq Args (arg@ L1 (arg@ L2 (arg@ L3 argv))))
		(or
			(and
				(eq L1 null)
				(eq L2 L3))
			(some N\ some L1'\ some L3'\ (and (and
				(eq L1 (cons N L1'))
				(eq L3 (cons N L3')))
				(A (arg@ L1' (arg@ L2 (arg@ L3' argv)))))))))).
