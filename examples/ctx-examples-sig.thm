#include "ctx.thm".

Define copy_i : list_imap -> i -> i -> prop by
	copy_i Theta argv argv ;
	copy_i Theta (X ++ Y) (U ++ V) := copy_i Theta X U /\ copy_i Theta Y V ;
	%
	copy_i Theta zero zero ;
	copy_i Theta (succ X) (succ U) := copy_i Theta X U ;
	copy_i Theta null null ;
	copy_i Theta (cons X Y) (cons U V) := copy_i Theta X U /\ copy_i Theta Y V ;
	%
	copy_i Theta X U := member_imap (imap X U) Theta.

Define name_mnu : string -> (i -> bool) -> prop by
	name_mnu "ctx"  Ctx    := ctx1 Ctx ;
	name_mnu "memb" Member := memb Member ;
	name_mnu "nat"  IsNat  := is_nat IsNat ;
	name_mnu "ctx=" CtxEq  := ctx1_equal CtxEq ;
	name_mnu "len"  Length := length Length.
