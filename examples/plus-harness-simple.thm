#include "../kernel/logic.thm".
#include "../kernel/cert-sig.thm".
#include "../fpc/simple-fpc.thm".
#include "plus-examples-sig.thm".
#include "../kernel/kernel.thm".
#include "plus-examples.thm".

#assert plus_zero _ (induction 1 0 1 0 1).
#assert plus_zero _ (pair# (induction 1 0 1 0 1) (induction# 1 0 1 0 1 Idx)).

#assert plus_succ _ (induction 1 0 1 0 1).
#assert plus_succ _ (pair# (induction 1 0 1 0 1) (induction# 1 0 1 0 1 Idx)).

#assert plus_comm _ _ (induction 2 1 0 1 0).
#assert plus_comm _ _ (pair# (induction 2 1 0 1 0) (induction# 2 1 0 1 0 Idx)).

#assert plus_total _ (induction 1 0 1 0 1).
#assert plus_total _ (pair# (induction 1 0 1 0 1) (induction# 1 0 1 0 1 Idx)).

#assert plus_det _ (induction 1 1 0 1 0).
#assert plus_det _ (pair# (induction 1 1 0 1 0) (induction# 1 1 0 1 0 Idx)).

#assert plus_assoc _ (induction 1 1 1 1 1).
#assert plus_assoc _ (pair# (induction 1 1 1 1 1) (induction# 1 1 1 1 1 Idx)).

#assert augend_nat (induction 1 1 1 1 1).
#assert augend_nat (pair# (induction 1 1 1 1 1) (induction# 1 1 1 1 1 Idx)).

#assert addend_nat (induction 1 1 1 1 1).
#assert addend_nat (pair# (induction 1 1 1 1 1) (induction# 1 1 1 1 1 Idx)).

#assert plus_assoc_rl
	(apply? 0 0 (idx "plus_comm")
	(apply? 0 0 (idx "addend_nat")
	(apply? 0 0 (idx "plus_comm")
	(apply? 0 0 (idx "plus_assoc")
	(apply? 0 0 (idx "plus_comm")
	(apply? 0 0 (idx "addend_nat")
	(apply? 0 0 (idx "plus_comm")
	search))))))).

%#assert plus_assoc_rl (apply 7 0 0 0 0).
%#assert plus_assoc_rl (pair# (apply 7 0 0 0 0) (apply# 7 0 0 0 0 Idx)).
