% A suitable step predicate must be defined before inclusion!
Define sim : (i -> bool) -> prop by
	sim (nu Pred\Args\
		% Note how the dual of mu is achieved: some vs all, and vs imp
		(all P\ all Q\ (imp (eq Args (arg@ P (arg@ Q argv)))
		(all L\ all Pn\ (imp
			(Step (arg@ P (arg@ L (arg@ Pn argv))))
			(some Qn\ (and
				(Step (arg@ Q (arg@ L (arg@ Qn argv))))
				(Pred (arg@ Pn (arg@ Qn argv))))))))))
	:=
	step Step.
