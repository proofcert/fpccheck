Define bisim_refl : cert -> prop by
	bisim_refl Cert := exists Bisim,
		bisim Bisim /\
		prove Cert (all P\ Bisim (arg@ P (arg@ P argv))).

Define bisim_symm : cert -> prop by
	bisim_symm Cert := exists Bisim,
		bisim Bisim /\
		prove Cert (all P\ all Q\ imp
			(Bisim (arg@ P (arg@ Q argv)))
			(Bisim (arg@ Q (arg@ P argv)))).

Define bisim_trans : cert -> prop by
	bisim_trans Cert := exists Bisim,
		bisim Bisim /\
		prove Cert (all P\ all Q\ all R\ (imp
			(Bisim (arg@ P (arg@ Q argv))) (imp
			(Bisim (arg@ Q (arg@ R argv)))
			(Bisim (arg@ P (arg@ R argv)))))).
